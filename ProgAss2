## I simply set the input x as a matrix
## and then set the solved value "s" as a null
## then I changed every reference to "mean" to "solve"makeCacheMatrix" <- function(x = matrix()) {
  inv <- NULL
  set <- function(y) {
    x <<- y
    inv <<- NULL ## This takes the matrix and sets it as a function 
  }
  get <- function() x
  setInverse <- function(inverse) inv <<- inverse
  getInverse <- function() inv ##this takes the function and programmes its inverse
  list(set = set,
       get = get,
       setInverse = setInverse,
       getInverse = getInverse)
}

  ##
  ## Same here, changed "mean" to "solve" and "m" to "s"
  cacheSolve <- function(x, ...) {
  inv <- x$getInverse() ## This gets the inverse of the matrix if it exists in cache
  if (!is.null(inv)) {
    message("getting cached data")
    return(inv)
  }
  mat <- x$get()
  inv <- solve(mat, ...)
  x$setInverse(inv)
  inv
}
